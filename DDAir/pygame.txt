"""
if event.type == KEYDOWN:
    if event.key == K_w: Y_POS-=STEP
    if event.key == K_a: X_POS-=STEP
    if event.key == K_s: Y_POS+=STEP
    if event.key == K_d: X_POS+=STEP
"""
"""
if pygame.key.get_pressed()[K_w]: 
    Y_POS-=STEP
    inertia['W']+=2
if pygame.key.get_pressed()[K_a]: 
    X_POS-=STEP
    inertia['A']+=2
if pygame.key.get_pressed()[K_s]: 
    Y_POS+=STEP
    inertia['S']+=2
if pygame.key.get_pressed()[K_d]: 
    X_POS+=STEP
    inertia['D']+=2

if(inertia['W']>0):
    Y_POS-=inertia['W']
    inertia['W']-=1
if(inertia['A']>0):
    X_POS-=inertia['A']
    inertia['A']-=1
if(inertia['S']>0):
    Y_POS+=inertia['S']
    inertia['S']-=1
if(inertia['D']>0):
    X_POS+=inertia['D']
    inertia['D']-=1
"""
#pygame.draw.circle(screen, (255,0,0), (X_POS,Y_POS), (50)) # red   
#pygame.display.update()

# if pygame.key.get_pressed()[K_w, K_UP]:    drone.go_up(STEP)
# if pygame.key.get_pressed()[K_a, K_LEFT]:  drone.go_left(STEP)
# if pygame.key.get_pressed()[K_s, K_DOWN]:  drone.go_down(STEP)
# if pygame.key.get_pressed()[K_d, K_RIGHT]: drone.go_right(STEP)

keys = pygame.key.get_pressed()
# if keys[pygame.K_UP] or keys[pygame.K_w]: drone.go_up(STEP)
# if keys[pygame.K_LEFT] or keys[pygame.K_a]: drone.go_left(STEP)
# if keys[pygame.K_DOWN] or keys[pygame.K_s]: drone.go_down(STEP)
# if keys[pygame.K_RIGHT] or keys[pygame.K_d]: drone.go_right(STEP)